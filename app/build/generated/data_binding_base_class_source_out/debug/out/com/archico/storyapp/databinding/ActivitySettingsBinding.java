// Generated by view binder compiler. Do not edit!
package com.archico.storyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.archico.storyapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnLogout;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final SwitchMaterial swtchDark;

  @NonNull
  public final SwitchMaterial swtchLang;

  @NonNull
  public final TextView tv;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnLogout, @NonNull ConstraintLayout container,
      @NonNull LinearLayout linearLayout, @NonNull SwitchMaterial swtchDark,
      @NonNull SwitchMaterial swtchLang, @NonNull TextView tv) {
    this.rootView = rootView;
    this.btnLogout = btnLogout;
    this.container = container;
    this.linearLayout = linearLayout;
    this.swtchDark = swtchDark;
    this.swtchLang = swtchLang;
    this.tv = tv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_logout;
      MaterialButton btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.swtch_dark;
      SwitchMaterial swtchDark = ViewBindings.findChildViewById(rootView, id);
      if (swtchDark == null) {
        break missingId;
      }

      id = R.id.swtch_lang;
      SwitchMaterial swtchLang = ViewBindings.findChildViewById(rootView, id);
      if (swtchLang == null) {
        break missingId;
      }

      id = R.id.tv;
      TextView tv = ViewBindings.findChildViewById(rootView, id);
      if (tv == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, btnLogout, container,
          linearLayout, swtchDark, swtchLang, tv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
